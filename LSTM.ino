#include <TensorFlowLite_ESP32.h>

#include <tensorflow/lite/micro/all_ops_resolver.h>
#include <tensorflow/lite/micro/micro_error_reporter.h>
#include <tensorflow/lite/micro/micro_interpreter.h>
#include "LSTM_Sensor.h" // TinyML 模型
#include "stdlib.h"
#include "Sensor_input.h"
#include "Sensor_output.h"

#define NUMBER_OF_INPUTS  10 * 9
#define NUMBER_OF_OUTPUTS 3
#define TENSOR_ARENA_SIZE 50 * 1024 // 模型使用記憶體大小

size_t s;
int dim;
int dim_d;

// Globals, used for compatibility with Arduino-style sketches.
namespace {
tflite::ErrorReporter* error_reporter = nullptr;
const tflite::Model* model = nullptr;
tflite::MicroInterpreter* interpreter = nullptr;
TfLiteTensor* input = nullptr;
TfLiteTensor* output = nullptr;
int inference_count = 0;

constexpr int kTensorArenaSize = TENSOR_ARENA_SIZE;
uint8_t tensor_arena[kTensorArenaSize];
}  // namespace


void setup() {
  // put your setup code here, to run once:
    Serial.begin(115200);
    static tflite::MicroErrorReporter micro_error_reporter;
    error_reporter = &micro_error_reporter;

    //model = tflite::GetModel(Dense_GasSensor_tflite);
    model = tflite::GetModel(LSTM_GasSensor_tflite);
    if (model->version() != TFLITE_SCHEMA_VERSION) {
    TF_LITE_REPORT_ERROR(error_reporter,
                         "Model provided is schema version %d not equal "
                         "to supported version %d.",
                         model->version(), TFLITE_SCHEMA_VERSION);
    return;
    }

    static tflite::AllOpsResolver resolver;

    static tflite::MicroInterpreter static_interpreter(
        model, resolver, tensor_arena, kTensorArenaSize, error_reporter);
    interpreter = &static_interpreter;

    TfLiteStatus allocate_status = interpreter->AllocateTensors();
    if (allocate_status != kTfLiteOk) {
        TF_LITE_REPORT_ERROR(error_reporter, "AllocateTensors() failed");
        return;
    }
    input = interpreter->input(0);
    output = interpreter->output(0);
    inference_count = 0;
    
}

void loop() {
  // put your main code here, to run repeatedly:    
    delay(1000);
  
    float x[90] = {0};//float to int8
    int8_t x_int[90];//int8 to input
    int8_t *predicted_int;//get int8 output
    float predicted_f[3];//int8 to float 
    float y[3] = {0};//check predicted_f accuracy

    int8_t counter = 0;
    
    for(int i = inference_count; i < inference_count + 10; i++){
        for(int j = 0; j < 9; j++){
            x[counter] = Sensor_input[i][j];
            counter++;
        }
    }

    for(int i = 0 ; i < 3; i++){
        y[i] = Sensor_output[inference_count + 9][i];
    }

    for(int i = 0 ; i < 90; i++){
        input->data.f[i] = x[i];
    }
    
    /*
    for(int i = 0 ; i < 90; i++){
        x_int[i] = x[i] / input->params.scale + input->params.zero_point;
        input->data.int8[i] = x_int[i];
    }
    */
    
    TfLiteStatus invoke_status = interpreter->Invoke();
    if (invoke_status != kTfLiteOk) {
      TF_LITE_REPORT_ERROR(error_reporter, "Invoke failed on inference_count: %d\n",
                           inference_count);
      return;
    }

    for(int i = 0; i < 3; i++){
        predicted_f[i] = output->data.f[i];
    }
    /*
    predicted_int = output->data.int8;
    for(int i = 0 ; i < 3; i++){
        predicted_f[i] = (predicted_int[i] - output->params.zero_point) * output->params.scale;
    }
  */

    
    /*
    Serial.println("Input shape:");
    Serial.print(input->dims->data[1]);
    Serial.print(" x ");
    Serial.println(input->dims->data[2]);

    Serial.println("Output shape:");
    Serial.println(output->dims->data[1]);
    */

    
    Serial.print("inference count : ");
    Serial.println(inference_count);
    /*Serial.print("x[0] value: ");
    Serial.println(x[0]);
*/
    Serial.print("predicted value:");
    Serial.print(predicted_f[0]);
    Serial.print(" ");
    Serial.print(predicted_f[1]);
    Serial.print(" ");
    Serial.println(predicted_f[2]);

    Serial.print("ground truth value: ");
    Serial.print(y[0]);
    Serial.print(" ");
    Serial.print(y[1]);
    Serial.print(" ");
    Serial.println(y[2]);
    Serial.println("");
    
    if(inference_count == 40){
        inference_count = 0;
    } else {
        inference_count++;
    }
    
    
}









/*
    float Sensor_input[50][9] = {
      {1.1776273717878945,0.2293417538356933,0.3877412311205315,0.873071754594268,0.6955410203310872,0.5821972406430216,-0.5276435803755962,-0.016947372966875967,-0.6510016945929807},
      {0.8659648020194008,-0.10384006430443606,0.04800175183493423,1.334556963615786,0.30799809628197033,-0.1497042680026272,-0.5618070015993668,-0.08674083807645504,-0.73131371209388},
      {1.3701248413507874,-0.1571491552068568,-0.011732662105390573,1.2015866491519587,0.2963426699947788,0.10250503565229231,-0.7212363006436301,0.27967485374883616,-0.66989863988731},
      {1.250959741145187,-0.13049460975564656,0.021867945736042126,1.0138638522618497,0.3808445105769171,0.4214756255688082,-0.8237265643149423,0.6286421792967327,-0.5791435736711236},
      {0.7742993403227851,-0.49033097334698617,-0.39627295184623146,1.4557946032739812,0.10694199282791719,0.19152008400108744,-0.8009509501657619,0.6053776909268731,-0.57392204931348},
      {0.4305538589604761,-0.7302218824078793,-0.7173454267754773,1.9720322947217808,-0.17570209463647632,-0.20657499333657967,-0.8009509501657619,0.5821132025570134,-0.5838678099947057},
      {0.3755545819425067,-0.8768218823895363,-0.9413494790516953,2.4608937449564396,-0.3505334889443486,-0.7406652834293505,-0.7895631430911715,0.4425262723378544,-0.6447855941672146},
      {0.1509742007857981,-0.9168037005663517,-1.0085506947345606,2.425695720539544,-0.3505334889443486,-0.7480832041250833,-0.8578899855387131,0.6286421792967327,-0.6201698364811804},
      {-0.04152326877709495,-1.0500764278224035,-1.2437549496245897,2.91846806237608,-0.5166233135368272,-1.0200736296352906,-0.8578899855387131,0.6111938130193381,-0.6335966134008353},
      {-0.4265182079028811,-1.1300400641760346,-1.422958191445564,3.411240404212616,-0.63609143298054,-1.3143178172326968,-0.9034412138370739,0.6402744234816627,-0.6661689796318502}, 
      
      {-0.4219349348180503,-1.1833491550784552,-1.549893821068754,3.8531711552247474,-0.7468179827088591,-1.4527856702197115,-0.9262168279862545,0.6577227897590575,-0.6790984685174438},     
      {-0.16985491515235698,-1.2100037005296655,-1.6058948341378085,4.2442603154124745,-0.7905258312858272,-1.509656395553664,-0.8237265643149423,0.4076295397830651,-0.703714226203478},
      {-0.23402073833998802,-1.1433673369016397,-1.4528253984157264,3.540299827074566,-0.6768854249857102,-1.386024383958115,-0.8806655996878935,0.5181358595398989,-0.7069465984248766},
      {0.1876403854644444,-0.9301309732919569,-1.027217699090912,2.570398709809003,-0.3330503495135614,-0.7480832041250833,-0.9148290209116643,0.6053776909268731,-0.691033381334915},
      {1.0538789984974632,-0.29042188246290856,-0.15733529608493227,1.1859430827444495,0.1856161202664597,0.17173896214579965,-0.8465021784641227,0.47742300489264416,-0.6932711774881909},
      {1.1363779140244172,-0.09051279157883094,0.06666875619128572,0.9630222614374452,0.3779306540051192,-0.01123641501561257,-0.8806655996878935,0.6635389118515225,-0.6229049206685175},
      {0.5955516900143845,-0.5169855187981965,-0.42987355968766416,1.5066361940983857,-0.02126769633118914,-0.4266399739766565,-0.8465021784641227,0.5355842258172936,-0.6574664390357776},
      {0.34805494343352195,-0.6902400642310638,-0.6725446163202337,1.9368342703048853,-0.2660316483622103,-0.8939689778078309,-0.8806655996878935,0.5065036153549689,-0.7071952424419073},
      {0.6093015092688768,-0.6635855187798534,-0.62774380586499,1.8312401970541992,-0.15239124206209334,-0.9112774594312077,-0.9945436704337959,1.0241384815843486,-0.558257476240549},
      {0.8384651635104162,-0.38371279154214477,-0.2730707230943116,1.2876262643932586,0.24389325170241716,-0.577471028123226,-1.1311973553288786,1.5824862024609836,-0.44835682071300254},

      {1.2280433757210332,0.17603266293327255,0.3429404206652879,0.5875766676572274,0.8062675700594063,0.011017347071586211,-1.1653607765526495,1.8558439408068352,-0.3630719228714903},
      {0.9484637175463551,-0.18380370065806706,-0.03413306733301237,0.9747549362430771,0.564417474600183,-0.21399291403231258,-1.1311973553288786,1.7802343536047913,-0.35262887415620314},
      {0.8659648020194008,-0.25044006428609294,-0.11253448562968867,1.0568836598824998,0.4012415065795022,-0.18679387148129184,-0.9717680562846155,1.2800478536528064,-0.40459547371560867},
      {1.2830426527390024,0.13605084475645696,0.2906728084675037,0.685348957704159,0.7742151477696297,0.1766842426096216,-0.9603802492100251,1.070667458324068,-0.5000747762553774},
      {2.1905307235354985,1.415469026414554,1.4069596689773234,-0.13202738708819026,1.834858939904055,0.9308395133424692,-0.9034412138370739,0.8729193071802605,-0.5299120582990552},
      {3.0842689750775016,2.2950690263044953,2.037904416222004,-0.5113838724702854,2.5633230828535227,1.660268381756207,-0.9717680562846155,1.1695415338959723,-0.4667564779732707},
      {2.460943835540515,1.8419417536339193,1.724298743035299,-0.35103731679331734,2.149555449658225,1.5366363701606582,-0.9831558633592057,1.0822997025089982,-0.5130042651409711},
      {0.9622135368008474,0.3492872083661399,0.4997432572586405,0.4858934860084183,0.7392488689080553,0.6242321245855083,-1.0400948987321568,0.8612870629953304,-0.6905360933008537},
      {-0.6327654967202665,-0.7302218824078793,-0.7210788276467476,1.9251015954992536,-0.3505334889443486,-0.5230729430211846,-1.142585162403469,0.8263903304405407,-0.8183391180546068},
      {-0.8710956971314674,-1.010094609645588,-1.1690869321991835,2.8637155799497984,-0.5865558712599762,-1.188213165405237,-1.142585162403469,0.6751711560364522,-0.8800028342782077},

      {-0.10568909196472596,-0.5702946097006172,-0.5120083788556108,1.6474282917659675,-0.228151512928838,-0.5354361441807395,-1.1311973553288786,0.5414003479097587,-0.9344558740079193},
      {-0.2706869230186343,-0.5036582460725914,-0.42240675794512356,1.6200520505528264,-0.2194099432134444,-0.49587390047016383,-1.1995241977764202,0.6111938130193381,-0.9667795962219036},
      {-0.5273502157691584,-0.8101855187615105,-0.8368142546561269,2.2027748992325398,-0.4350353295264869,-0.8420435329377004,-1.2678510402239616,0.7333323769611015,-0.9747362047668843},
      {-0.9810942511674063,-1.1033855187248243,-1.37442398011905,3.3134681141656843,-0.7759565484268378,-1.2871187746816761,-1.2792388472985519,0.7624129874234262,-0.9784658650223441},
      {-1.246924090087592,-1.2100037005296655,-1.6282952393654304,4.146488025365543,-0.930390946732125,-1.6036167243662809,-1.381729110969864,0.9717933827521646,-0.9816982372437425},
      {-1.1735917207302993,-1.2233309732552708,-1.646962243721782,4.154309808569297,-0.8691999587243697,-1.5788903220471713,-1.3589534968206833,0.9194482839199799,-0.9854278974992023},
      {-0.8069298739438364,-1.1167127914504293,-1.385624182732861,3.3330225721750706,-0.6710577118421145,-1.3489347804794505,-1.3020144614477323,0.797309719978216,-0.9851792534821717},
      {-0.055273088031587314,-0.7702037005846948,-0.7920134442008833,2.1675768748156443,-0.2689455049340082,-0.7035756799506858,-1.3475656897460933,0.9252644060124445,-0.9647904440856584},
      {2.218030362044483,1.0289781173720036,1.0970873966618886,0.25123998989578217,1.3016231872650446,0.9085857512552704,-1.245075426074781,0.808941964163146,-0.9192885889690499},
      {2.02553289248159,1.5887235718474213,1.5338952986005137,-0.25717591834826287,1.7620125256091081,1.373442114854534,-1.0287070916575667,0.4076295397830651,-0.9038726599131497},

      {1.1317946409395865,0.509214481073402,0.6565460938519931,0.3099033639239412,0.7538181517670446,0.5055453934537814,-0.5731948086739571,-0.4357081636243516,-0.9637958680175359},
      {0.733049882559308,0.18935993565887768,0.35414062327909884,0.5328241852309455,0.4216385025820873,0.33246057722001304,-0.44792893085346436,-0.6276401926756949,-0.9829414573288959},
      {0.4718033167239532,0.0027781175004051974,0.16373717884431352,0.7909430309548453,0.24389325170241716,-0.1818485910174699,-0.36821428133133277,-0.7381465124325288,-0.9948763701463668},
      {0.6826338786261694,0.10939629930524669,0.27573920498242255,0.685348957704159,0.40706921972309795,-0.12250522545160648,-0.24294840351084002,-0.8544689542818277,-0.9782172210053135},
      {0.843048436595247,0.3492872083661399,0.5072100590011811,0.4546063531934002,0.6022976100335553,0.07036071263744963,-0.22017278936165963,-0.7846754891722482,-0.9041213039301803},
      {1.145544460194079,0.5358690265246122,0.6714796973370744,0.3490122799427139,0.835406135777385,0.26322665072650575,-0.2771118247346108,-0.709065901970204,-0.8916891030786479},
      {0.9438804444615243,0.33595993564053456,0.4885430546448296,0.4741608112027865,0.5935560403181617,0.1964653644649094,-0.26572401766002063,-0.697433657785274,-0.8800028342782077},
      {0.7834658864924468,0.20268720838448281,0.36907422676418,0.6775271745004046,0.45660478144366173,-0.09530618290058575,-0.15184594691411843,-0.8661011984667577,-0.9068563881175175},
      {1.8651183345125124,1.2155599355304763,1.250156832383971,-0.08118579626378576,1.3307617529830231,0.9333121535743801,-0.3568264742567426,-0.5578467275661154,-0.852900636421867},
      {1.9338674307849744,1.068959935548819,1.1344214053745916,-0.04598777184689033,1.1471887889597572,1.0272724823869972,-0.43654112377887416,-0.3368340880524478,-0.7738318390061207}
      };

      float Sensor_output[50][3] = {
        {0.3278693059073834,-0.3716135705932802,0.07249071898774467},
        {-0.0912247271345737,-0.6799773401421614,-0.37951267031953256},
        {0.04847328387941211,-0.5429267758982143,0.09401468990713882},
        {0.04847328387941211,-0.34224559254100584,0.26620645726229203},
        {-0.370620749162545,-0.5429267758982143,0.13706263174592712},
        {-0.6500167711905165,-0.748502622264135,-0.2934167866419559},
        {-0.6500167711905165,-0.8806585234993698,-0.7023722341104448},
        {-0.7897147822045021,-0.8806585234993698,-0.723896205029839},
        {-0.859563787711495,-0.9638677946474806,-1.0682797397401453},
        {-1.0691108042324735,-1.0226037507520294,-1.3480913616922694},

        {-1.0341863014789772,-1.0813397068565782,-1.6279029836443935},
        {-0.9992617987254807,-1.10581302190014,-1.7570468091607583},
        {-0.9992617987254807,-1.017709087743317,-1.3265673907728752},
        {-0.7198657766975092,-0.7044506551857234,-0.594752379513474},
        {-0.0912247271345737,-0.332456266523581,0.05096674806835052},
        {0.04847328387941211,-0.552716101915639,-0.18579693204498515},
        {-0.30077174365555226,-0.6359253730637497,-0.2503688448031676},
        {-0.4404697546695379,-0.7191346442118606,-0.37951267031953256},
        {-0.370620749162545,-0.675082677133449,-0.3149407575613501},
        {-0.1610737326415666,-0.4695068307675282,0.05096674806835052},

        {0.5374163224283618,-0.17093238723607185,0.39535028277865697},
        {0.04847328387941211,-0.28350963643645705,0.3523023409398687},
        {0.04847328387941211,-0.23945766935804544,0.45992219553683944},
        {0.5374163224283618,0.005275481077574549,0.546018079214416},
        {1.8645474270612257,0.19127267540864573,0.8904016139247225},
        {3.3313765427080755,0.6905283022973104,1.3424050032319996},
        {2.7725844986521326,0.5338990860185137,1.1917372067962406},
        {1.2359063774982901,-0.00940850794856265,0.5675420501338102},
        {-0.4404697546695379,-0.724029307220573,-0.5301804667552916},
        {-0.7897147822045021,-0.9540784686300557,-1.2189475361759046},

        {-0.30077174365555226,-0.5869787429766258,-0.2718928157225618},
        {-0.1610737326415666,-0.5331374498807894,0.007918806229562212},
        {-0.5103187601765308,-0.7827652633251218,-0.4010366412389267},
        {-0.9294127932184878,-0.9320524850908499,-1.0359937833610542},
        {-0.9992617987254807,-1.0813397068565782,-1.6709509254831818},
        {-1.0691108042324735,-1.0372877397781666,-1.412663274450452},
        {-0.9294127932184878,-0.9100265015516442,-0.8315160596268097},
        {-0.5103187601765308,-0.650609362089887,-0.12122501928680271},
        {1.5851514050332547,0.31853391363516814,0.675161904730781},
        {1.131132869237801,0.024854133112424147,0.47068418099653647},

        {0.6771143334423476,-0.26882564741031983,0.26620645726229203},
        {0.3977183114143763,-0.12688042015766024,0.7182098465695692},
        {-0.021375721627580797,-0.4841908197936654,0.07249071898774467},
        {0.25802030040039053,-0.40098154864555463,0.13706263174592712},
        {0.3977183114143763,-0.3862975596194174,0.2877304281816862},
        {0.5374163224283618,-0.2541416583841826,0.3523023409398687},
        {0.46756731692136894,-0.3128776144887314,0.22315851542350373},
        {0.1881712948933976,-0.4499281787326786,0.2016345445041096},
        {1.2359063774982901,-0.17582705024478423,0.8473536720859342},
        {1.0962083664843048,-0.19540570227963383,0.7612577884083576}
      };
*/
